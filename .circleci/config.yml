version: 2.1

jobs:
  build_platform:
    working_directory: ~/openex
    docker:
      - image: nikolaik/python-nodejs:python3.8-nodejs12
    steps:
      - run:
          command: apt-get update --allow-insecure-repositories --allow-unauthenticated && apt-get install -y build-essential
      - checkout
      - run: 
          working_directory: ~/openex/openex-front
          command: yarn install
      - run:
          working_directory: ~/openex/openex-front
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - openex

  build_api:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - run: 
          working_directory: ~/openex/openex-api
          command: mvn install -DskipTests
      - persist_to_workspace:
          root: ~/
          paths:
            - openex

  package_rolling:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run:
          working_directory: ~/openex/openex-api
          command: mvn install -DskipTests
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run: git remote add openex ssh://git-9qdBths0@openex.io:/~/git-9qdBths0.git && git push --force openex master
      - run: mkdir release
      - run: cp -a ./openex-api/target/openex-api-3.0.0.jar release/openex/ && cp -a ./openex-api/src/main/resources/application.properties release/openex/
      - run:
          working_directory: ~/openex/release
          command: tar -zcvf "openex-$(date '+%Y%m%d').tar.gz" openex
      - run: 
          working_directory: ~/openex/release
          command: scp "openex-$(date '+%Y%m%d').tar.gz" git-9qdBths0@openex.io:/dns/io/openex/releases/

  deploy_demo:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: DEBIAN_FRONTEND=noninteractive apt-get update -q && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run:
          working_directory: ~/openex/deploy
          command: git clone ssh://openex-XZ1eb0O9@openex.io:/~/openex-XZ1eb0O9.git .
      - run:
          working_directory: ~/openex/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/openex/deploy
          command: git remote add ci ~/openex && git pull --no-edit -s recursive -X theirs ci master         
      - run: mv ./deploy/openex-api/target/application.properties /tmp/ && rsync -av --delete ./openex-api/target ./deploy/openex-api/ && mv /tmp/application.properties ./deploy/openex-api/target/
      - run:
          working_directory: ~/openex/deploy
          command: git add --force -A
      - run:
          working_directory: ~/openex/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_reference:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: DEBIAN_FRONTEND=noninteractive apt-get update -q && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run:
          working_directory: ~/openex/deploy
          command: git clone ssh://openex-Ak5byxnE@openex.io:/~/openex-Ak5byxnE.git .
      - run:
          working_directory: ~/openex/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/openex/deploy
          command: git remote add ci ~/openex && git pull --no-edit -s recursive -X theirs ci master         
      - run: mv ./deploy/openex-api/target/application.properties /tmp/ && rsync -av --delete ./openex-api/target ./deploy/openex-api/ && mv /tmp/application.properties ./deploy/openex-api/target/
      - run:
          working_directory: ~/openex/deploy
          command: git add --force -A
      - run:
          working_directory: ~/openex/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_preprod1:
    working_directory: ~/openex
    docker:
      - image: maven:3.8.4-openjdk-17
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H openex.io >> ~/.ssh/known_hosts
      - run: DEBIAN_FRONTEND=noninteractive apt-get update -q && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@openex.io" && git config --global user.name "OpenEx CircleCI"
      - run:
          working_directory: ~/openex/deploy
          command: git clone ssh://openex-V30PHgjf@openex.io:/~/openex-V30PHgjf.git .
      - run:
          working_directory: ~/openex/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/openex/deploy
          command: git remote add ci ~/openex && git pull --no-edit -s recursive -X theirs ci master         
      - run: mv ./deploy/openex-api/target/application.properties /tmp/ && rsync -av --delete ./openex-api/target ./deploy/openex-api/ && mv /tmp/application.properties ./deploy/openex-api/target/
      - run:
          working_directory: ~/openex/deploy
          command: git add --force -A
      - run:
          working_directory: ~/openex/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master
          
  docker_build:
    working_directory: ~/openex
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - run:
          working_directory: ~/openex
          name: Build Docker image openexhq/platform
          command: docker build -t openexhq/platform:${CIRCLE_TAG} .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openexhq/platform:${CIRCLE_TAG}
            docker push openexhq/player:${CIRCLE_TAG}

  docker_build_rolling:
    working_directory: ~/openex
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - run:
          working_directory: ~/openex
          name: Build Docker image openexhq/platform
          command: docker build -t openexhq/platform:rolling .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openexhq/platform:rolling
            docker push openexhq/player:rolling

workflows:
  openex:
    jobs:
      - build_platform:
          filters:
            tags:
              only: /.*/     
      - build_player:
          requires:
            - build_platform        
          filters:
            tags:
              only: /.*/                          
      - package_rolling:
          requires:
            - build_player
          filters:
            branches:
              only:
                - master           
      - deploy_demo:
          requires:
            - build_player
          filters:
            branches:
              only:
                - master
      - deploy_reference:
          requires:
            - build_player
          filters:
            branches:
              only:
                - master
      - deploy_preprod1:
          requires:
            - build_player
          filters:
            branches:
              only:
                - master                
      - docker_build_rolling:
          requires:
            - build_player
          filters:
            branches:
              only:
                - master
      - docker_build:
          requires:
            - build_player
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/
