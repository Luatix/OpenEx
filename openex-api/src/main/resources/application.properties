# Global configuration
# suppress inspection "SpringBootApplicationProperties"
info.app.name=@project.description@
# suppress inspection "SpringBootApplicationProperties"
info.app.version=@project.version@

# OpenEx configuration
openex.name=OpenEx
openex.version=3
openex.base-url=http://localhost:8080
openex.map-tile-server=https://map.openex.io/styles/klokantech-basic/{z}/{x}/{y}.png
openex.cookie-name=openex_token
openex.cookie-secure=false
openex.cookie-duration=P1D

# Server configuration
server.address=0.0.0.0
server.port=8080
server.ssl.enabled=false
server.http2.enabled=${server.ssl.enabled}
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:localhost.p12
server.ssl.key-store-password=admin
server.ssl.key-alias=localhost

# Authenticators
## Local
openex.auth-local-enable=true
## Oauth
openex.auth-openid-enable=false
## Configuration example
# openex.auth-openid-label=LOGIN WITH CITEUM COLLECTIVE
# spring.security.oauth2.client.provider.citeum.issuer-uri=https://auth.citeum.org/auth/realms/citeum
# spring.security.oauth2.client.registration.citeum.client-id=
# spring.security.oauth2.client.registration.citeum.client-secret=
# spring.security.oauth2.client.registration.citeum.redirect-uri=${openex.base-url}/login/oauth2/code/citeum
## Kerberos
openex.auth-kerberos-enable=false

# Technical
spring.application.name=${openex.name}
spring.quartz.properties.org.quartz.scheduler.instanceName=OpenEx_Scheduler
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.quartz.properties.org.quartz.threadPool.threadCount=1
spring.data.rest.basePath=/api

# Database Properties
spring.datasource.url=jdbc:postgresql://...
spring.datasource.username=openex
spring.datasource.password=<password>
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL92Dialect
spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
spring.flyway.table=migrations
spring.flyway.locations=classpath:io/openex/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0

# Minio Properties
minio.endpoint=<localhost>
minio.bucket=openex
minio.port=9000
minio.access-key=<key>
minio.access-secret=<secret>

# Logging
logging.level.root=fatal
logging.level.org.flywaydb=info
logging.level.io.openex=warn
logging.file.name=./logs/openex.log
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.-%d{yyyy-MM-dd}.%i
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=7

# OVH SMS config
ovh.sms.enable=false
ovh.sms.ak=<ak>
ovh.sms.as=<as
ovh.sms.ck=<ck>
ovh.sms.service=<service>

# Mail config (Always available)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=<username>
spring.mail.password=<password>
spring.mail.properties.mail.smtp.ssl.trust=*
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
